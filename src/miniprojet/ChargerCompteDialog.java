/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package miniprojet;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Walid
 */
public class ChargerCompteDialog extends javax.swing.JDialog {
    private final Client client;
    /** Creates new form ChargerCompteDialog */
    public ChargerCompteDialog(java.awt.Frame parent, boolean modal,Client client) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(parent);
        this.client = client;
        setVisible(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        chargerCompteBtn = new javax.swing.JButton();
        annulerChargerCompteBtn = new javax.swing.JButton();
        chargerSoldeET = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Charger Compte");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Charger la somme de :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, 20));

        chargerCompteBtn.setText("Charger");
        chargerCompteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargerCompteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(chargerCompteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, -1, -1));

        annulerChargerCompteBtn.setText("Annuler");
        annulerChargerCompteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                annulerChargerCompteBtnActionPerformed(evt);
            }
        });
        getContentPane().add(annulerChargerCompteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, -1));
        getContentPane().add(chargerSoldeET, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 90, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void annulerChargerCompteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_annulerChargerCompteBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_annulerChargerCompteBtnActionPerformed

    private void chargerCompteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargerCompteBtnActionPerformed
        StringBuilder alerte = new StringBuilder();
        if (chargerSoldeET.getText().isEmpty()) {
            alerte.append("Veuillez entrez une valeur.\n");
        } else {
            double flouss = 0;
            //Verify the deposit is a positive number
            try {
                flouss = Double.parseDouble(chargerSoldeET.getText());
                int result = JOptionPane.showConfirmDialog(this, "Voulez-vous charger la somme de " + flouss + " dinars dans ce compte?\n");
                if (result == JOptionPane.OK_OPTION) {
                    try {
                        //Make the deposit
                        client.getAccount().ajouterArgent(flouss);
                        this.dispose();
                    } catch (SommeIncorrecteException ex) {
                        alerte.append("Somme incorrecte.\n");
                    }
                }
            } catch (NumberFormatException ex) {
                alerte.append("Veuillez entrer une valeur numÃ©rique.\n");
            }
        }
        if (alerte.length() > 0) {
            JOptionPane.showMessageDialog(this, alerte.toString(), "Alerte", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_chargerCompteBtnActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton annulerChargerCompteBtn;
    private javax.swing.JButton chargerCompteBtn;
    private javax.swing.JTextField chargerSoldeET;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

}
