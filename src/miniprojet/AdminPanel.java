/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package miniprojet;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

//nexmo
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Walid
 */
public class AdminPanel extends javax.swing.JPanel {
    final JFrame frame = new JFrame("AdminPanel");
    private Bank bank=null;
    private Client client=null;
    private final DefaultTableModel model;
    private StringBuilder resultBuf;

    /**
     * Creates new form AdminPanel
     */
    public AdminPanel() {
        initComponents();
        bank = new Bank();
        client = null;
        model = (DefaultTableModel) clientsTable.getModel();
    }
    
    public void refreshTable(){
        for (Client c : bank.getClients()) {
            addClientToTable(c);
        }
    }
    
    //public static void main(String[] args){
    //AdminPanel UI = new AdminPanel();
    //UI.setVisible(true);
    //}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        nomTV = new javax.swing.JLabel();
        nomET = new javax.swing.JTextField();
        emailET = new javax.swing.JTextField();
        emailTV = new javax.swing.JLabel();
        passwordTV = new javax.swing.JLabel();
        telephoneET = new javax.swing.JTextField();
        telephoneTV = new javax.swing.JLabel();
        adresseET = new javax.swing.JTextField();
        adresseTV = new javax.swing.JLabel();
        soldeET = new javax.swing.JTextField();
        soldeTV = new javax.swing.JLabel();
        ajouterCompteBtn = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        passwordET = new javax.swing.JPasswordField();
        smsCheckBox = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        rechercheET = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientsTable = new javax.swing.JTable();
        chargerCompteBtn = new javax.swing.JButton();
        dechargerCompteBtn = new javax.swing.JButton();
        supprimerClientBtn = new javax.swing.JButton();
        telechargerListeBtn = new javax.swing.JButton();
        uploadFichierBtn = new javax.swing.JButton();
        cinET = new javax.swing.JTextField();
        cinTV = new javax.swing.JLabel();
        viderListeBtn = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 50, 10, 370));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Ajouter un utilisateur");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 60, -1, -1));

        nomTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nomTV.setText("Nom complet :");
        add(nomTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, -1, -1));
        add(nomET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 110, 190, 20));
        add(emailET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 140, 190, 20));

        emailTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        emailTV.setText("Email :");
        add(emailTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 140, -1, -1));

        passwordTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        passwordTV.setText("Mot de passe :");
        add(passwordTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, -1, -1));
        add(telephoneET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 230, 190, 20));

        telephoneTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        telephoneTV.setText("Numéro Tel :");
        add(telephoneTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 230, -1, -1));
        add(adresseET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 260, 190, 20));

        adresseTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        adresseTV.setText("Adresse :");
        add(adresseTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 70, -1));
        add(soldeET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 290, 190, 20));

        soldeTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        soldeTV.setText("Solde :");
        add(soldeTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 290, -1, -1));

        ajouterCompteBtn.setText("Ajouter");
        ajouterCompteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ajouterCompteBtnActionPerformed(evt);
            }
        });
        add(ajouterCompteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, -1, -1));

        jLabel8.setText("Bienvenue ");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 10));

        jLabel9.setForeground(new java.awt.Color(51, 204, 0));
        jLabel9.setText("  Walid");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 40, 10));

        jButton2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Walid\\Desktop\\signouticon.png")); // NOI18N
        jButton2.setMaximumSize(new java.awt.Dimension(16, 16));
        jButton2.setPreferredSize(new java.awt.Dimension(16, 16));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 10, 30, 30));
        add(passwordET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 190, -1));

        smsCheckBox.setSelected(true);
        smsCheckBox.setText("Envoyer un sms au client");
        smsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                smsCheckBoxActionPerformed(evt);
            }
        });
        add(smsCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 330, -1, -1));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Gestion des utilisateurs");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 60, -1, -1));

        rechercheET.setText("Rechercher un client");
        rechercheET.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechercheETMouseClicked(evt);
            }
        });
        rechercheET.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rechercheETActionPerformed(evt);
            }
        });
        rechercheET.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                rechercheETKeyReleased(evt);
            }
        });
        add(rechercheET, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 380, -1));

        clientsTable.setAutoCreateRowSorter(true);
        clientsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom Complet", "N° Compte", "Balance", "Téléphone"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        clientsTable.getTableHeader().setReorderingAllowed(false);
        clientsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clientsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(clientsTable);
        if (clientsTable.getColumnModel().getColumnCount() > 0) {
            clientsTable.getColumnModel().getColumn(0).setResizable(false);
            clientsTable.getColumnModel().getColumn(1).setResizable(false);
            clientsTable.getColumnModel().getColumn(2).setResizable(false);
            clientsTable.getColumnModel().getColumn(3).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 380, 230));

        chargerCompteBtn.setText("Charger Compte");
        chargerCompteBtn.setEnabled(false);
        chargerCompteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chargerCompteBtnActionPerformed(evt);
            }
        });
        add(chargerCompteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, -1, -1));

        dechargerCompteBtn.setText("Retirer Argent");
        dechargerCompteBtn.setEnabled(false);
        dechargerCompteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dechargerCompteBtnActionPerformed(evt);
            }
        });
        add(dechargerCompteBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, -1, -1));

        supprimerClientBtn.setText("Supprimer");
        supprimerClientBtn.setEnabled(false);
        supprimerClientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerClientBtnActionPerformed(evt);
            }
        });
        add(supprimerClientBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, -1, -1));

        telechargerListeBtn.setText("Enregistrer Fichier");
        telechargerListeBtn.setEnabled(false);
        telechargerListeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telechargerListeBtnActionPerformed(evt);
            }
        });
        add(telechargerListeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 400, -1, -1));

        uploadFichierBtn.setText("Ouvrir Fichier");
        uploadFichierBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadFichierBtnActionPerformed(evt);
            }
        });
        add(uploadFichierBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, -1, -1));
        add(cinET, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 200, 190, 20));

        cinTV.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cinTV.setText("CIN : ");
        add(cinTV, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 200, -1, -1));

        viderListeBtn.setText("Vider Liste");
        viderListeBtn.setEnabled(false);
        viderListeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viderListeBtnActionPerformed(evt);
            }
        });
        add(viderListeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //frame.dispose();
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void smsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_smsCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_smsCheckBoxActionPerformed

    private void rechercheETActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rechercheETActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rechercheETActionPerformed

    private void ajouterCompteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ajouterCompteBtnActionPerformed
        StringBuilder alerte = new StringBuilder();
        String nomComplet="", email="", password="", adresse="";
        double solde = 0;
        int cin = 0,telephone=0;
        if (nomET.getText().isEmpty()) {
            alerte.append("Veuillez entrez votre nom et prénom.\n");
        } else {
            nomComplet = nomET.getText();
        }
        if (emailET.getText().isEmpty()) {
            alerte.append("Veuillez entrez une adresse mail valide.\n");
        } else {
            email = emailET.getText();
        }
        if (passwordET.getPassword().length<8) {
            alerte.append("Votre mot de passe doit se composer d'au moins 8 lettres ou chiffres.\n");
        } else {
            password = passwordET.getText();
        }
        if (cinET.getText().isEmpty()&&cinET.getText().length()!=8) {
            alerte.append("Votre CIN doit se composer de 8 chiffres.\n");
        } else {
            try {
                cin = Integer.parseInt(cinET.getText());
            } catch (NumberFormatException ex) {
                alerte.append("Veuillez entrez un nombre.");
            }
        }
        if (telephoneET.getText().isEmpty()&&telephoneET.getText().length()!=8) {
            alerte.append("Votre numéro de téléphone doit se composer de 8 chiffres.\n");
        } else {
            try {
                telephone = Integer.parseInt(telephoneET.getText());
            } catch (NumberFormatException ex) {
                alerte.append("Veuillez entrez un nombre.");
            }
        }
        if (adresseET.getText().isEmpty()&&(!adresseET.getText().contains("@"))) {
            alerte.append("Entrez une adresse valide.\n");
        } else {
            adresse = adresseET.getText();
        }
        if (soldeET.getText().isEmpty()) {
            alerte.append("entrez un solde de départ.");
        } else {
            try {
                solde = Double.parseDouble(soldeET.getText());
            } catch (NumberFormatException ex) {
                alerte.append("le solde doit etre un nombre.");
            }
        }
        if (alerte.length() > 0) {
            JOptionPane.showMessageDialog(this, alerte.toString(), "Alerte", JOptionPane.WARNING_MESSAGE);
        } else {
            Account account=new Account();
            account.setBalance(solde);
            if (account != null) {
                client = new Client(nomComplet, email, password, adresse,telephone, cin, solde, account);
                bank.addClient(client);
                frame.dispose();
            } else {
                JOptionPane.showMessageDialog(this, alerte.toString(), "Alerte", JOptionPane.WARNING_MESSAGE);
            }
        }
        addClientToTable(getClient());
        if (smsCheckBox.isSelected()){
            sendSMS();
        }else{
            
            }
    }//GEN-LAST:event_ajouterCompteBtnActionPerformed

    private void supprimerClientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerClientBtnActionPerformed
        int selectedRow = clientsTable.getSelectedRow();
        if (selectedRow>0){
        Client client = getItemSelectionne(selectedRow);
            if (client != null) {
                bank.removeClient(client);
                removeClientFromTable(selectedRow);
            }
        }
    }//GEN-LAST:event_supprimerClientBtnActionPerformed

    private void chargerCompteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chargerCompteBtnActionPerformed
        int selectedRow = clientsTable.getSelectedRow();
        Client client = getItemSelectionne(selectedRow);
        if (client!=null){
            javax.swing.JDialog window = null;
            window = new ChargerCompteDialog(frame, true, client);
            reloadCustomerRowData(selectedRow, client);
        }
    }//GEN-LAST:event_chargerCompteBtnActionPerformed

    private void dechargerCompteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dechargerCompteBtnActionPerformed
        int selectedRow = clientsTable.getSelectedRow();
        Client client = getItemSelectionne(selectedRow);
        if (client!=null){
            javax.swing.JDialog window = null;
            window = new DechargerCompteDialog(frame, true, client);
            reloadCustomerRowData(selectedRow, client);
        }
    }//GEN-LAST:event_dechargerCompteBtnActionPerformed

    private void clientsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clientsTableMouseClicked
        chargerCompteBtn.setEnabled(true);
        dechargerCompteBtn.setEnabled(true);
        supprimerClientBtn.setEnabled(true);
        telechargerListeBtn.setEnabled(true);
        viderListeBtn.setEnabled(true);
        if (evt.getClickCount()==2){
            int selectedRow = clientsTable.getSelectedRow();
            Client client = getItemSelectionne(selectedRow);
            if (client!=null){
                InformationsClient info = new InformationsClient(frame, true, client);
            }
        }
    }//GEN-LAST:event_clientsTableMouseClicked

    private void telechargerListeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telechargerListeBtnActionPerformed
        JFileChooser jfileChooser = new JFileChooser();
        int choix = jfileChooser.showSaveDialog(this);
        if (choix == JFileChooser.APPROVE_OPTION) {
            File f = jfileChooser.getSelectedFile();
            String nomFichier = f.toString();
            if (!nomFichier.toLowerCase().endsWith(".walid")) {
                nomFichier += ".walid";
            }
            try {
                FileOutputStream fos = new FileOutputStream(nomFichier);
                ObjectOutputStream oos = new ObjectOutputStream(fos);
                oos.writeObject(bank);
                oos.close();
                fos.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_telechargerListeBtnActionPerformed

    private void uploadFichierBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadFichierBtnActionPerformed
        JFileChooser jfileChooser = new JFileChooser();
        int choix = jfileChooser.showOpenDialog(this);
        if (choix == JFileChooser.APPROVE_OPTION) {
            if (!jfileChooser.getSelectedFile().toString().toLowerCase().endsWith(".walid")) {
                JOptionPane.showMessageDialog(this, "Veuillez Selectionner un fichier avec le format .walid", "Mauvais format de fichier", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    FileInputStream fIn = new FileInputStream(jfileChooser.getSelectedFile());
                    ObjectInputStream objIn = new ObjectInputStream(fIn);
                    Object bankData = objIn.readObject();
                    if (bankData instanceof Bank) {
                        bank = (Bank) bankData;
                        for (int i = model.getRowCount() - 1; i >= 0; i--) {
                            model.removeRow(i); 
                        }
                        for (Client c : bank.getClients()) {
                        addClientToTable(c);
                        }
                    }
                    //saveLocation = jfileChooser.getSelectedFile().toString();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AdminPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            } 
        }
    }//GEN-LAST:event_uploadFichierBtnActionPerformed

    private void viderListeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viderListeBtnActionPerformed
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i); 
        }
    }//GEN-LAST:event_viderListeBtnActionPerformed

    private void rechercheETKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rechercheETKeyReleased
        String recherche = rechercheET.getText().toLowerCase();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        clientsTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(recherche));
    }//GEN-LAST:event_rechercheETKeyReleased

    private void rechercheETMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechercheETMouseClicked
        rechercheET.setText("");
    }//GEN-LAST:event_rechercheETMouseClicked

    Client getClient() {
        return client;
    }
    
    Client getItemSelectionne(int selectedRow){
        int clientSelectionne = clientsTable.getSelectedRow();
        if (clientSelectionne>=0){
            int numeroCompte = (int) clientsTable.getValueAt(clientSelectionne, 1);
            client = bank.getClientByAccountNumber(numeroCompte);
            //JOptionPane.showMessageDialog(this, "Vous venez de supprimer le client numéro "+numeroCompte);
        }
        return client;
    }
    
    private void addClientToTable(Client client) {
        model.addRow(new Object[]{});
        reloadCustomerRowData(model.getRowCount() - 1, client);
    }
    
    private void removeClientFromTable(int ligne) {
        model.removeRow(ligne);
    }
    
    private void reloadCustomerRowData(int selectedRow, Client client) {
        if(client != null){
        model.setValueAt(client.getNomComplet(), selectedRow, 0);
        model.setValueAt(client.getAccount().getAccountNumber(), selectedRow, 1);
        model.setValueAt(client.getAccount().getBalance(), selectedRow, 2);
        model.setValueAt(client.getTelephone(), selectedRow, 3);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField adresseET;
    private javax.swing.JLabel adresseTV;
    private javax.swing.JButton ajouterCompteBtn;
    private javax.swing.JButton chargerCompteBtn;
    private javax.swing.JTextField cinET;
    private javax.swing.JLabel cinTV;
    private javax.swing.JTable clientsTable;
    private javax.swing.JButton dechargerCompteBtn;
    private javax.swing.JTextField emailET;
    private javax.swing.JLabel emailTV;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField nomET;
    private javax.swing.JLabel nomTV;
    private javax.swing.JPasswordField passwordET;
    private javax.swing.JLabel passwordTV;
    private javax.swing.JTextField rechercheET;
    private javax.swing.JCheckBox smsCheckBox;
    private javax.swing.JTextField soldeET;
    private javax.swing.JLabel soldeTV;
    private javax.swing.JButton supprimerClientBtn;
    private javax.swing.JButton telechargerListeBtn;
    private javax.swing.JTextField telephoneET;
    private javax.swing.JLabel telephoneTV;
    private javax.swing.JButton uploadFichierBtn;
    private javax.swing.JButton viderListeBtn;
    // End of variables declaration//GEN-END:variables

    private String sendSMS() {
        try{URL url = new URL("https://rest.nexmo.com/sms/json");
	HttpURLConnection con = (HttpURLConnection) url.openConnection();
        con.setRequestMethod("POST");
        String postData = "{ \"api_key\":\"5ace42eb\",\"api_secret\":\"xxxxxxxxxxxxxx\",\"to\":\"phonenumber\",\"from\":\"Walid Bank\",\"text\":\"Bienvenue a Walid Bank!\"}";
	con.setInstanceFollowRedirects(true);
        con.setRequestProperty("Content-length",String.valueOf(postData.length()));
        con.setRequestProperty("Content-type","application/json");
        con.setDoOutput(true);
        con.setDoInput(true);

        DataOutputStream output = new DataOutputStream(con.getOutputStream());
        output.writeBytes(postData);
        output.close();	
        int code = con.getResponseCode(); // 200 = HTTP_OK
        System.out.println("Response    (Code):" + code);
        System.out.println("Response (Message):" + con.getResponseMessage());
        DataInputStream input = new DataInputStream(con.getInputStream());
        int c;
        resultBuf = new StringBuilder();
        while ((c = input.read()) != -1) {
            resultBuf.append((char) c);
            }
        input.close();
    } catch(IOException e){
        
    }
        return resultBuf.toString();
    }
}

